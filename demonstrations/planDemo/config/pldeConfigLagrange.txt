%% PROJECT

% version of the experiment
versionName  = 0.1


%% USER

% email address ticked when processing is done server side (leave empty for no mailing service), can be a cell array of email adresses
emailAddress  = 
% complete name of user
completeName  = lagrange


%% PATHS

% path to input data
inputPath  = ~/data/databases
% path to the code repository of the project
codePath  = /Users/lagrange/projects/houle/dev/tools/expCode/demonstrations/planDemo
% path to the data repository of the project
dataPath  = /Users/lagrange/projects/houle/dev/tools/expCode/demonstrations/planDemo/data
% path to backup of transfered data
backupPath  = /tmp/expCodeBackup/planDemo
% path to export bundles
bundlePath  = /tmp/planDemo
% path to matlab
matlabPath  = 


%% CODE

% code dependencies to load and export
dependencies  = { '/Users/lagrange/projects/houle/dev/tools/expCode/expCode'}
% dependencies (including expCode) can be part of the project: 0 do not use local versions, 1 use local versions, 2 update local versions
localDependencies  = 0


%% COMPUTING

% processing steps to execute: -1 none, 0 all, >0 processing step by numeric id
do  = -1
% perform computation even if the result is already available
redo  = 1
% use parallel processing, if |parallel|>1 specify the number of cores, if array set at step level, if >0 parallelize designs, if <0 parallelize within each design, can be a value for all processing steps or an array of config per step
parallel  = 0
% factor mask: cell array defining the modalities to be set for the factors (0 do all, 1 first modality, [1 3] first and third modality), can be a cell array of cell array
mask  = {{}}
% cell array of couples of string and array, if the string is parsed in a mask definition it gets replaced by the specified array
maskPatch  = {}
% set a experiment design: assume cell array of {[factors as numericIds], number of values per factor (0 complete set of values), type of plan as string 'f' (factorial) or 'o' (one parameter at a time), [seed as a vector of index of factor]}
design =
% dummy mode
dummy  = 0
% set the random seed at init for replicability
setRandomSeed  = 0

% names of the machines
machineNames  = {'mo-lagrange.irccyn.ec-nantes.fr', 'pc-adtsi-sunda.irccyn.ec-nantes.fr'}
% host index for running the experiment
host  = 0
% log level (set to 0 for no log)
log  = 1
% show processing progress 0: none, 1: bar if on local host, 2: verbose output, 3: liminar output
progress  = 1


%% DATA

% attempt to retrieve needed data server side
retrieve  = 0
% naming convention for files: long (long naming as default), short (short naming), hash (hash based naming)
namingConventionForFiles  = hash
% sync data across machines:
sync  = {}
% generate bundle of code and/or data
bundle  = 0
% clean data repositories
clean  = 0


%% DISPLAY

% step for which to display observations: -1 none, 0 last processed step if any, >0 specific step
obs  = 0
% specify default display of observations (>: prompt, t: table, p:plot)
display  = >
% mantissa precision for the display of observations
displayDigitPrecision  = 2
% font size for the display of observations
displayFontSize  = 16
% show timing observations
showTiming  = 1


%% REPORT

% generate report: <=-3 none -2 verbose tex report -1 generation of tex report, 0 display figures, 1 display figures and generation of tex report, 2 display figures and verbose tex report >=3 none
report  = -3
% memo message for the generation of reports
message  = default
% path to the pdf viewer (try to locate one if left empty)
pdfViewer  = 
% threshold for statistical significance testing
significanceThreshold  = 0.05
% show the factors graph in the report
showFactorsInReport = 1


%% MISC

% usage of default expcode smtp. If set to 0 assume availability of local stmp server
useExpCodeSmtp  = 1

